{"ast":null,"code":"var _jsxFileName = \"/home/vinipolaca/5-Semestre/EngenhariaDeSoftware/TrabalhoEngenhariaDeSoftware/frontend/src/pages/PainelCPP/Parecer/TabelaParecer/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Button } from 'antd';\nimport { Table, Space, notification, message } from 'antd';\nimport { ExclamationCircleFilled } from '@ant-design/icons';\nimport { Container } from './style';\nimport Relatorio from '../Relatorio/index';\nimport Parecer from '../Modal/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Tabela({\n  btns,\n  children\n}) {\n  _s();\n\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n  const [leitura, setLeitura] = useState(false);\n  const [visible, setVisible] = useState(false);\n  const [relatorios, setRelatorios] = useState([]);\n  useEffect(async () => {\n    message.loading('Carregando relatorios', 'load');\n\n    try {\n      let data = [];\n\n      for (let i = 0; i < 40; i++) {\n        data.push({\n          aluno: 'Rafael',\n          email: 'Rafael@gmail.com',\n          ra: i,\n          curso: 'mestrado',\n          orientador: 'Celso'\n        });\n      }\n\n      const response = data; //pega dados da api\n      //setRelatorios(response);\n    } catch (err) {\n      console.log(err);\n      message.destroy('load');\n      notification.open({\n        message: 'Erro ao carregar relatórios',\n        description: 'Tente novamente ou entre em contato com a assistencia tecnica',\n        icon: /*#__PURE__*/_jsxDEV(ExclamationCircleFilled, {\n          style: {\n            color: 'red'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      });\n    }\n\n    message.destroy('load');\n  });\n  const columns = [{\n    title: 'aluno',\n    dataIndex: 'aluno',\n    key: 'aluno',\n    render: aluno => /*#__PURE__*/_jsxDEV(\"a\", {\n      children: aluno\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 28\n    }, this)\n  }, {\n    title: 'email',\n    dataIndex: 'email',\n    key: 'email'\n  }, {\n    title: 'ra',\n    dataIndex: 'ra',\n    key: 'ra'\n  }, {\n    title: 'curso',\n    dataIndex: 'curso',\n    key: 'curso'\n  }, {\n    title: 'orientador',\n    dataIndex: 'orientador',\n    key: 'orientador'\n  }, {\n    title: 'action',\n    key: 'action',\n    render: (text, record) => /*#__PURE__*/_jsxDEV(Space, {\n      size: \"middle\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setLeitura(true),\n        children: \"Ler\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setVisible(true),\n        children: \"Parecer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [leitura ? /*#__PURE__*/_jsxDEV(Relatorio, {\n      setLeitura: setLeitura\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      dataSource: relatorios,\n      pagination: {\n        pageSize: 8\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Parecer, {\n      visible: visible,\n      setVisible: setVisible\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Tabela, \"7eQ47YzDgZT4HJxrOjQQdsmVQ74=\");\n\n_c = Tabela;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tabela\");","map":{"version":3,"sources":["/home/vinipolaca/5-Semestre/EngenhariaDeSoftware/TrabalhoEngenhariaDeSoftware/frontend/src/pages/PainelCPP/Parecer/TabelaParecer/index.js"],"names":["React","useState","useEffect","Button","Table","Space","notification","message","ExclamationCircleFilled","Container","Relatorio","Parecer","Tabela","btns","children","selectedRowKeys","setSelectedRowKeys","leitura","setLeitura","visible","setVisible","relatorios","setRelatorios","loading","data","i","push","aluno","email","ra","curso","orientador","response","err","console","log","destroy","open","description","icon","color","columns","title","dataIndex","key","render","text","record","pageSize"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react';\nimport {Button} from 'antd'\nimport { Table, Space, notification, message} from 'antd';\nimport { ExclamationCircleFilled } from '@ant-design/icons';\nimport {Container} from './style';\nimport Relatorio from '../Relatorio/index';\nimport Parecer from '../Modal/index';\n\nexport default function Tabela({btns, children}){\n    const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n    const [leitura, setLeitura] = useState(false);\n    const [visible, setVisible] = useState(false);\n    const [relatorios, setRelatorios] = useState([]);\n\n    useEffect(async () =>{\n      message.loading('Carregando relatorios', 'load')\n      try{\n          let data = [];\n          for(let i=0; i<40; i++){\n            data.push({\n              aluno: 'Rafael',\n              email: 'Rafael@gmail.com',\n              ra: i,\n              curso: 'mestrado',\n              orientador: 'Celso'\n            })\n          }\n          const response = data; //pega dados da api\n          //setRelatorios(response);\n      }\n      catch(err){\n          console.log(err);\n          message.destroy('load');\n          notification.open({\n              message: 'Erro ao carregar relatórios',\n              description: 'Tente novamente ou entre em contato com a assistencia tecnica',\n              icon: <ExclamationCircleFilled  style={{ color: 'red' }}/>\n          })\n      }\n      message.destroy('load');\n    })\n\n\n    const columns = [\n        {\n          title: 'aluno',\n          dataIndex: 'aluno',\n          key: 'aluno',\n          render: aluno => <a>{aluno}</a>,\n        },\n        {\n          title: 'email',\n          dataIndex: 'email',\n          key: 'email',\n        },\n        {\n          title: 'ra',\n          dataIndex: 'ra',\n          key: 'ra',\n        },\n        {\n          title: 'curso',\n          dataIndex: 'curso',\n          key: 'curso',\n        },\n        {\n          title: 'orientador',\n          dataIndex: 'orientador',\n          key: 'orientador',\n        },\n        {\n          title: 'action',\n          key: 'action',\n          render: (text, record) => (\n            <Space size=\"middle\">\n              <Button onClick={()=>setLeitura(true)}>Ler</Button>\n              <Button onClick={()=>setVisible(true)}>Parecer</Button>\n            </Space>\n          ),\n        },\n      ];\n\n    return(\n        <Container>\n            {leitura ? <Relatorio setLeitura={setLeitura}></Relatorio>:\n            <Table columns={columns} dataSource={relatorios} pagination={{ pageSize: 8 }}  />}\n            <Parecer visible={visible} setVisible={setVisible}></Parecer>\n        </Container>\n    );\n}"]},"metadata":{},"sourceType":"module"}